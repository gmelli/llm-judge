[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "llm-judge"
version = "0.1.0"
description = "A robust LLM-as-Judge library for content evaluation and categorization"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Gabor Melli", email = "gabor@melli.ca"},
]
keywords = [
    "llm",
    "evaluation",
    "judge",
    "content-analysis",
    "categorization",
    "ai",
    "machine-learning",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
    "httpx>=0.24.0",
    "tenacity>=8.0.0",
    "rich>=13.0.0",
    "pyyaml>=6.0",
    "numpy>=1.20.0",
]

[project.optional-dependencies]
providers = [
    "openai>=1.0.0",
    "anthropic>=0.20.0",
    "google-generativeai>=0.3.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.24.0",
]
all = [
    "llm-judge[providers,dev,docs]",
]

[project.urls]
Homepage = "https://github.com/gmelli/llm-judge"
Documentation = "https://gmelli.github.io/llm-judge"
Repository = "https://github.com/gmelli/llm-judge"
Issues = "https://github.com/gmelli/llm-judge/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/llm_judge"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["src/llm_judge"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "C90",  # mccabe complexity
]
ignore = ["E203", "E501"]

[tool.mypy]
python_version = "3.9"
# Phase 2: Fixing real type issues
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
no_implicit_optional = true
strict_optional = true
check_untyped_defs = true
disallow_untyped_defs = false  # Will enable in Phase 3
disallow_any_generics = false  # Will enable in Phase 4
warn_redundant_casts = true
warn_unused_ignores = true
allow_untyped_globals = false
allow_redefinition = false
no_warn_no_return = false